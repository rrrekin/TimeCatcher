#!/usr/bin/env bash
set -euo pipefail

# Pre-commit hook to format markdown files and source code
# This script is shared in the repository and can be installed via: npm run install-hooks

# Get list of staged files (NUL-delimited for safe handling of filenames with spaces)
staged_md_files=()
staged_src_files=()
staged_yaml_files=()

# Collect staged files using mapfile to avoid subshell issues
mapfile -t staged_md_files < <(git diff --cached --name-only --diff-filter=ACM | grep -E '\.md$' | grep -v node_modules)
mapfile -t staged_src_files < <(git diff --cached --name-only --diff-filter=ACM | grep -E '\.(ts|js|vue|json|html|css|scss)$' | grep -v node_modules)
mapfile -t staged_yaml_files < <(git diff --cached --name-only --diff-filter=ACM | grep -E '\.(yaml|yml)$' | grep -v node_modules)

# Compute counts of staged files
staged_md_count=${#staged_md_files[@]}
staged_src_count=${#staged_src_files[@]}
staged_yaml_count=${#staged_yaml_files[@]}

# Ensure counts are integers (fallback to 0 if unset)
staged_md_count=$((staged_md_count + 0))
staged_src_count=$((staged_src_count + 0))
staged_yaml_count=$((staged_yaml_count + 0))

# Check if any files need processing
if [ $staged_md_count -eq 0 ] && [ $staged_src_count -eq 0 ] && [ $staged_yaml_count -eq 0 ]; then
  # No files staged for formatting, exit successfully
  exit 0
fi

echo "🔍 Checking files for formatting issues..."

# Process markdown files if any are staged
if [ ${#staged_md_files[@]} -gt 0 ]; then
  # Check if markdownlint-cli2 is available
  if ! npx -q markdownlint-cli2 --version >/dev/null 2>&1; then
    echo "⚠️  markdownlint-cli2 not found. Run 'npm install' to install dependencies."
    echo "⚠️  Skipping markdown formatting check."
  else
    # Run markdownlint-cli2 on staged files only
    echo "📝 Running markdownlint on staged markdown files..."

    if printf '%s\0' "${staged_md_files[@]}" | xargs -0 npx markdownlint-cli2 --config .markdownlint-cli2.jsonc; then
      echo "✅ Markdown formatting complete"

      # Add any fixed files back to the staging area
      for file in "${staged_md_files[@]}"; do
        if [ -f "$file" ]; then
          git add -- "$file"
        fi
      done
    else
      echo "❌ Markdown formatting failed"
      echo "💡 Fix the issues above or run 'npm run format:md' to auto-fix what's possible"
      exit 1
    fi
  fi
fi

# Process source files if any are staged
if [ ${#staged_src_files[@]} -gt 0 ]; then
  # Check if prettier is available
  if ! npx -q prettier --version >/dev/null 2>&1; then
    echo "⚠️  Prettier not found. Run 'npm install' to install dependencies."
    echo "⚠️  Skipping code formatting check."
  else
    echo "🎨 Running Prettier on staged source files..."

    # Run Prettier directly on staged source files via NUL-delimited pipeline
    if git diff --cached --name-only -z --diff-filter=ACM | tr '\0' '\n' | grep -E '\.(ts|js|vue|json|html|css|scss)$' | grep -v node_modules | xargs npx prettier --write; then
      echo "✅ Code formatting complete"

      # Re-stage any formatted files
      git diff --cached --name-only -z --diff-filter=ACM | tr '\0' '\n' | grep -E '\.(ts|js|vue|json|html|css|scss)$' | grep -v node_modules | xargs git add
    else
      echo "❌ Code formatting failed"
      echo "💡 Fix the issues above or run 'npm run format' to format all files"
      exit 1
    fi
  fi
fi

# Process YAML files if any are staged
if [ ${#staged_yaml_files[@]} -gt 0 ]; then
  # Check if yamllint is available
  if ! command -v yamllint >/dev/null 2>&1; then
    echo "⚠️  yamllint not found. Install with: brew install yamllint (macOS) or apt-get install yamllint (Linux)"
    echo "⚠️  Skipping YAML linting check."
  else
    echo "📋 Running yamllint on staged YAML files..."

    if printf '%s\0' "${staged_yaml_files[@]}" | xargs -0 yamllint -c .yamllint; then
      echo "✅ YAML linting passed"
    else
      echo "❌ YAML linting failed"
      echo "💡 Fix the YAML syntax issues above"
      exit 1
    fi
  fi

  # Run Prettier on YAML files for formatting
  if ! npx -q prettier --version >/dev/null 2>&1; then
    echo "⚠️  Prettier not found. Run 'npm install' to install dependencies."
    echo "⚠️  Skipping YAML formatting."
  else
    echo "🎨 Running Prettier on staged YAML files..."

    if printf '%s\0' "${staged_yaml_files[@]}" | xargs -0 npx prettier --write; then
      echo "✅ YAML formatting complete"

      # Re-stage any formatted YAML files
      for file in "${staged_yaml_files[@]}"; do
        if [ -f "$file" ]; then
          git add -- "$file"
        fi
      done
    else
      echo "❌ YAML formatting failed"
      echo "💡 Fix the issues above or run 'npm run format' to format all files"
      exit 1
    fi
  fi
fi

echo "🎉 All formatting checks passed!"
exit 0
